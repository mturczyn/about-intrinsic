name: Deploy Azure Resources and Web Application to all Environments

on:
  push:
    branches:
    - master
  workflow_dispatch:

env:
  AZURE_RESOURCEGROUP_NAME: intrinsic-rg
  ENVIRONMENT: nonprod
  DEPLOY_NONPROD_ENV: 'false'

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
            node-version: '20'
      - name: 'Install node packages'
        run: npm i
      - name: 'Run tests'
        run: npm run test
    outputs:
      AZURE_RESOURCEGROUP_NAME: ${{ env.AZURE_RESOURCEGROUP_NAME }}
      DEPLOY_NONPROD_ENV: ${{ env.DEPLOY_NONPROD_ENV }}

  deploy-to-nonprod:
    if: ${{ needs.test.outputs.DEPLOY_NONPROD_ENV == 'true' }}
    needs: test
    uses: './.github/workflows/deploy-infra-and-website-to-env.yml'
    with:
      environmentType: 'nonprod'
      resourceGroupName: ${{ needs.test.outputs.AZURE_RESOURCEGROUP_NAME }}
      dockerBaseUrl: index.docker.io
      dockerImageNameAndTag: about-intrinsic:latest
    secrets:
      azureCredentials: ${{ secrets.AZURE_CREDENTIALS }}
      dockerUsername: ${{ secrets.DOCKER_USERNAME }}
      dockerPassword: ${{ secrets.DOCKER_PASSWORD }}

  deploy-to-prod:
    needs: [test, deploy-to-nonprod]
    uses: './.github/workflows/deploy-infra-and-website-to-env.yml'
    with:
      environmentType: 'prod'
      resourceGroupName: ${{ needs.test.outputs.AZURE_RESOURCEGROUP_NAME }}
      dockerBaseUrl: index.docker.io
      dockerImageNameAndTag: about-intrinsic:latest
    secrets:
      azureCredentials: ${{ secrets.AZURE_CREDENTIALS }}
      dockerUsername: ${{ secrets.DOCKER_USERNAME }}
      dockerPassword: ${{ secrets.DOCKER_PASSWORD }}
